#!/usr/bin/env ruby

require 'rubygems'
require 'optparse'

begin
  gem 'rAtom'
  require 'atom'
  require 'atom/pub'
rescue Gem::LoadError
  puts "This script requires the rAtom library."
  puts "Install using 'gem install rAtom'."
  exit(1)
end

begin
  gem 'sqlite3-ruby'
  require 'sqlite3'
rescue Gem::LoadError
  puts "This script requires the SQLite3/Ruby library."
  puts "Install using 'gem install sqlite3-ruby'"
  exit(1)
end

options = {}
opts = OptionParser.new do |opts|
  opts.banner = "Usage: import_item_cache --url=COLLECTOR_URL --db=DBFILE"
  opts.separator ""
  opts.separator "Specific options:"
  
  opts.on("-u", "--url=COLLECTOR_URL", :REQUIRED,
          "The URL of the collector from which items will be fetched.") do |url|
    options[:url] = url
  end
  
  opts.on("-d", "--db=DBFILE", :REQUIRED,
          "The SQLite3 database to load the items into.") do |db|
    options[:db] = db
  end
  
  opts.separator ""
  opts.separator "Common options:"
  
  opts.on_tail("-h", "--help", "Show this message") do 
    puts opts
    exit
  end  
  
  opts.separator ""
end

opts.parse!

if options[:url].nil? || options[:db].nil?
  puts opts
  exit(1)
end

unless File.exists?(options[:db])
  puts "Database file #{options[:db]} does not exist. Trying to create it..."
  
  this_file = File.expand_path(__FILE__)
  schema_location = File.join(File.dirname(this_file), '../share/classifier/initial_schema.sql')
  if File.exists?(schema_location) 
    system("cat #{schema_location} | sqlite3 #{options[:db]}")
    puts "Database created!"
  else
    puts "Could not find the initial schema file at #{schema_location}."
    puts "You can try creating the database using 'classifier --db #{options[:db]} --create-db'"
    exit(1)
  end
end

atom_service = Atom::Pub::Service.load_service(URI.parse(options[:url]))
puts "About to import #{atom_service.workspaces.first.collections.size} feeds into #{options[:db]}."

atom_service.workspaces.first.collections.each do |collection|
  feed = collection.feed
  puts "\timporting #{feed.title}"
end


